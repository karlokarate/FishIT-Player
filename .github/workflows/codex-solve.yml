name: Codex – Solver (Bot 2)

on:
  issues:
    types: [labeled]
  workflow_dispatch:
    inputs:
      issue:
        description: "Issue number to solve"
        required: true

permissions:
  contents: write
  pull-requests: write
  actions: write
  issues: write

concurrency:
  group: codex-solve-issue-${{ github.event.inputs.issue || github.event.issue.number }}
  cancel-in-progress: true

jobs:
  solve:
    # Trigger, wenn per Dispatch gestartet ODER wenn Label "contextmap-ready" gesetzt wird
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'issues' && github.event.action == 'labeled' && contains(github.event.label.name, 'contextmap-ready')) }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y patch

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade openai requests unidiff

      - name: Resolve ISSUE_NUMBER
        id: res
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "ISSUE_NUMBER=${{ github.event.inputs.issue }}" >> $GITHUB_ENV
          else
            echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
          fi

      # Artefakt aus Bot 1 (codex-plan.yml) laden – falls vorhanden
      - name: Download context artifact from Bot 1 (if available)
        uses: dawidd6/action-download-artifact@v3
        continue-on-error: true
        with:
          name: codex-context-${{ env.ISSUE_NUMBER }}
          workflow: codex-plan.yml
          path: ./
          if_no_artifact_found: ignore

      - name: Inspect / place context files
        run: |
          mkdir -p .codex
          # Falls die Dateien im Root extrahiert wurden, verschieben:
          if [ -f "./context.json" ]; then mv ./context.json .codex/context.json; fi
          if [ -f "./context_full.md" ]; then mv ./context_full.md .codex/context_full.md; fi
          # Falls als Unterordner extrahiert: suchen und verschieben
          if [ ! -f ".codex/context.json" ]; then
            found=$(find . -maxdepth 3 -type f -name context.json | head -n 1 || true)
            if [ -n "$found" ]; then mv "$found" .codex/context.json; fi
          fi
          if [ ! -f ".codex/context_full.md" ]; then
            found=$(find . -maxdepth 3 -type f -name context_full.md | head -n 1 || true)
            if [ -n "$found" ]; then mv "$found" .codex/context_full.md; fi
          fi
          ls -la .codex || true

      - name: Run Solver (high)
        env:
          # OpenAI
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ vars.OPENAI_BASE_URL }}
          OPENAI_MODEL_DEFAULT: ${{ vars.OPENAI_MODEL_DEFAULT }}  # z.B. gpt-5
          OPENAI_REASONING_EFFORT: high
          # GitHub
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          GH_EVENT_NAME: ${{ github.event_name }}
          ISSUE_NUMBER: ${{ env.ISSUE_NUMBER }}
          # Optional: Build-Workflow (für Post-Build-Test)
          SOLVER_BUILD_WORKFLOW: ${{ vars.SOLVER_BUILD_WORKFLOW || 'release-apk.yml' }}
        run: |
          python .github/codex/bot_solver.py

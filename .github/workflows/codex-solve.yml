name: Codex â€“ Solver (Bot 2)

on:
  repository_dispatch:
    types: [codex-solver-context-ready]
  issues:
    types: [labeled]
  workflow_dispatch:
    inputs:
      issue:
        description: "Issue number (optional; falls back to context JSON)"
        required: false
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: write

jobs:
  solve:
    # Startbedingungen:
    # - bei repository_dispatch (Bot 1)
    # - oder wenn Label "contextmap-ready" gesetzt wird
    # - oder bei manuellem issue_comment durch User
    if: >
      (
        github.event_name == 'repository_dispatch'
      ) || (
        github.event_name == 'issues' &&
        github.event.action == 'labeled' &&
        github.event.label.name == 'contextmap-ready'
      ) || (
        github.event_name == 'issue_comment' &&
        github.actor != 'github-actions[bot]'
      )

    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
      - name: Debug event payload
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action || '' }}"
          echo "Label: ${{ github.event.label.name || '' }}"
          echo "Actor: ${{ github.actor }}"
          echo "Payload (first 500 chars):"
          echo "${{ toJson(github.event.client_payload) }}" | head -c 500 || true

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/codex/requirements.txt

      - name: Run Solver (Bot 2)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          ISSUE_NUMBER: ${{ github.event.client_payload.issue_number || inputs.issue }}

          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ vars.OPENAI_BASE_URL }}
          OPENAI_MODEL_DEFAULT: gpt-5
          OPENAI_REASONING_EFFORT: high
        run: |
          python .github/codex/bot_solver.py

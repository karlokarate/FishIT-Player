name: Codex Bot (fishit-player)

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened, edited]
  pull_request_review_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      comment:
        description: "Optional: /codex Befehl manuell auslösen"
        type: string
        required: true

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: codex-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  codex:
    # Triggert bei /codex überall (Kommentar, Issue-Body, Review-Kommentar) ODER manuell
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/codex')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '/codex')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '/codex'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install "openai>=1.40.0" unidiff requests

      - name: Run Codex Bot
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
          OPENAI_MODEL_DEFAULT: ${{ vars.OPENAI_MODEL_DEFAULT }}
          OPENAI_REASONING_EFFORT: ${{ vars.OPENAI_REASONING_EFFORT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          GH_EVENT_NAME: ${{ github.event_name }}
          DISPATCH_COMMENT: ${{ inputs.comment }}
          CODEX_ALLOWLIST: ${{ vars.CODEX_ALLOWLIST }}
        run: python .github/codex/bot.py

      # Schnelltest: baut und testet Debug einmal, damit offensichtliche Fehler früh auffallen
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build + Unit Tests (fast gate)
        env:
          HEADER: ${{ secrets.header }}
          TG_API_ID: ${{ secrets.TG_API_ID }}
          TG_API_HASH: ${{ secrets.TG_API_HASH }}
        run: ./gradlew -S --no-daemon --build-cache assembleDebug testDebugUnitTest

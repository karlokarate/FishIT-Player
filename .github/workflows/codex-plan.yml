name: Codex ContextMap Bot

on:
  issues:
    types: [opened, edited, labeled]
  issue_comment:
    types: [created, edited]
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  contextmap:
    name: Build Context for Solver
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full, with LFS + submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install requirements
        run: |
          pip install -r .github/codex/requirements.txt

      - name: Build Context (Bot 1)
        id: build_context
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/codex/bot_contextmap.py

      # Robust handling to avoid "Matching delimiter not found 'EOF'"
      - name: Normalize summary file (newline + LF endings)
        run: |
          mkdir -p .github/codex/context
          # create file if missing
          [ -f .github/codex/context/summary.txt ] || touch .github/codex/context/summary.txt
          # ensure LF line endings (strip potential CR)
          sed -i 's/\r$//' .github/codex/context/summary.txt
          # ensure file ends with a newline so EOF lands on its own line
          tail -c1 .github/codex/context/summary.txt | od -An -t x1 | grep -qi '0a' || printf '\n' >> .github/codex/context/summary.txt

      - name: Set summary output
        id: summaryout
        run: |
          {
            echo 'summary<<EOF'
            # write content with CR stripped again defensively (in case file was regenerated)
            sed 's/\r$//' .github/codex/context/summary.txt
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Upload context artifact
        uses: actions/upload-artifact@v4
        with:
          name: codex-context
          path: |
            .github/codex/context/solver_input.json
            .github/codex/context/solver_input.json.gz
            .github/codex/context/summary.txt
            .github/codex/context/attachments/**

      - name: Comment summary to issue
        if: github.event_name == 'issues' || github.event_name == 'issue_comment'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            **ContextMap ready** âœ…
            - Referenced paths: embedded
            - Attachments: embedded 1:1
            - Repo files indexed: see artifact (`codex-context`)
            - Summary:
              ```
              ${{ steps.summaryout.outputs.summary }}
              ```
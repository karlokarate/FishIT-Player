name: Codex – ContextMap (Bot 1)

on:
  issues:
    types: [opened, edited, labeled]
  issue_comment:
    types: [created, edited]
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

# Verhindert parallele Doppel-Läufe für dasselbe Issue
concurrency:
  group: codex-contextmap-${{ github.event_name }}-${{ github.event.issue.number || github.run_id }}
  cancel-in-progress: true

jobs:
  contextmap:
    # Loop-Schutz: nicht erneut laufen, wenn der Bot selbst kommentiert hat
    if: ${{ !(github.event_name == 'issue_comment' && github.actor == 'github-actions[bot]') }}

    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/codex/requirements.txt

      - name: Run Bot 1 (ContextMap)
        env:
          # Standardtoken von GitHub Actions
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Werden vom Runner ohnehin gesetzt – hier zur Klarheit explizit übergeben
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          # Verhindert doppelte Kommentare; Kommentar übernimmt unten die Action
          CODEX_POST_ISSUE_COMMENT: 'false'
        run: |
          mkdir -p .github/codex/context
          python .github/codex/bot_contextmap.py

      - name: Upload context artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: codex-context
          path: |
            .github/codex/context/**

      - name: Read summary
        id: summaryout
        shell: bash
        run: |
          if [[ -f .github/codex/context/summary.txt ]]; then
            {
              echo "summary<<'EOF'"
              cat .github/codex/context/summary.txt
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
          else
            echo "summary=ContextMap completed." >> "$GITHUB_OUTPUT"
          fi

      - name: Comment summary to issue
        if: ${{ github.event_name == 'issues' || github.event_name == 'issue_comment' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            **ContextMap ready** ✅
            - Referenced paths: embedded
            - Attachments: embedded 1:1
            - Repo files indexed: see artifact (`codex-context`)
            - Summary:
              ```
              ${{ steps.summaryout.outputs.summary }}
              ```
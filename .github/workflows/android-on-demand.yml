name: Android Build/Test (manual)

on:
  workflow_dispatch:
    inputs:
      gradle_args:
        description: 'Gradle arguments (e.g. "assembleDebug testDebugUnitTest")'
        required: true
        default: "assembleDebug"

permissions:
  contents: read

jobs:
  gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Detect AGP / JDK
        id: detect
        shell: bash
        run: |
          AGP=$(grep -RhoE "com\.android\.tools\.build:gradle[: ]+[\"']([0-9]+\.[0-9]+\.[0-9]+)[\"']" --include="*.gradle*" | sed -E "s/.*['\"]([0-9]+\.[0-9]+\.[0-9]+)['\"].*/\1/" | head -n1 || true)
          JDK=17; if [[ -n "$AGP" ]]; then MAJOR=${AGP%%.*}; if (( MAJOR < 8 )); then JDK=11; fi; fi
          echo "jdk=$JDK" >> "$GITHUB_OUTPUT"

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ steps.detect.outputs.jdk }}
          cache: gradle

      - uses: android-actions/setup-android@v3

      - uses: gradle/actions/setup-gradle@v3
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Fix gradlew permissions
        run: |
          chmod +x ./gradlew
          sed -i 's/\r$//' gradlew || true

      - name: Run Gradle
        env:
          HEADER: ${{ secrets.header }}
          TG_API_ID: ${{ secrets.TG_API_ID }}
          TG_API_HASH: ${{ secrets.TG_API_HASH }}
        run: |
          ./gradlew -S --no-daemon --build-cache ${{ inputs.gradle_args }}

      - name: Upload artifacts (if assemble/bundle)
        if: contains(inputs.gradle_args, 'assemble') || contains(inputs.gradle_args, 'bundle')
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: |
            **/build/outputs/apk/**/**/*.apk
            **/build/outputs/bundle/**/**/*.aab
            **/build/outputs/mapping/**/mapping.txt
          if-no-files-found: ignore

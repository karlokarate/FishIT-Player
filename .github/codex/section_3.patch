diff --git a/app/src/main/java/com/chris/m3usuite/prefs/SettingsStore.kt b/app/src/main/java/com/chris/m3usuite/prefs/SettingsStore.kt
index d6f3d89..8dc0fc4 100644
--- a/app/src/main/java/com/chris/m3usuite/prefs/SettingsStore.kt
+++ b/app/src/main/java/com/chris/m3usuite/prefs/SettingsStore.kt
@@ -35,6 +35,8 @@ private val Context.dataStore by preferencesDataStore("settings")
  * Zentraler Settings-Store der App.
  * Erweiterungen: Player-Modus (ask/internal/external) + Subtitle-Stil + Landscape-Header-Default.
  */
     object Keys {
+    // Feature flags
+    val PLAYER_LAUNCHER_V1 = booleanPreferencesKey("feature_player_launcher_v1")
     // Basis / Netzwerk
     val M3U_URL = stringPreferencesKey("m3u_url")
     val EPG_URL = stringPreferencesKey("epg_url")
     val USER_AGENT = stringPreferencesKey("user_agent")
@@ -173,6 +175,7 @@ class SettingsStore(private val context: Context) {
 
     // -------- Flows (reaktiv) --------
     val m3uUrl: Flow<String> = context.dataStore.data.map { it[Keys.M3U_URL].orEmpty() }
+    val playerLauncherV1: Flow<Boolean> = context.dataStore.data.map { it[Keys.PLAYER_LAUNCHER_V1] ?: true }
     val epgUrl: Flow<String> = context.dataStore.data.map { it[Keys.EPG_URL].orEmpty() }
     val userAgent: Flow<String> = context.dataStore.data.map { it[Keys.USER_AGENT] ?: "IBOPlayer/1.4 (Android)" }
     val referer: Flow<String> = context.dataStore.data.map { it[Keys.REFERER].orEmpty() }

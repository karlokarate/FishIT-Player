diff --git a/app/build.gradle.kts b/app/build.gradle.kts
index 7ba8977..b0d8371 100644
--- a/app/build.gradle.kts
+++ b/app/build.gradle.kts
@@ -1,3 +1,4 @@
+@file:Suppress("UnstableApiUsage")
 import java.io.File
 import java.util.Properties
 
@@ -62,6 +63,24 @@ android {
         // Feature switches
         // Toggle visibility of header (User-Agent) editing UI
         val showHeaderUi = (project.findProperty("SHOW_HEADER_UI")?.toString()?.toBooleanStrictOrNull()) ?: false
         buildConfigField("boolean", "SHOW_HEADER_UI", showHeaderUi.toString())
+        // Telegram TDLib enable switch (per-ABI flavor overrides below)
+        buildConfigField("boolean", "TG_TDLIB_ENABLED", "false")
+    }
+
+    // ABI product flavors (reliable per-ABI release APKs)
+    flavorDimensions += "arch"
+    productFlavors {
+        create("arm64") {
+            dimension = "arch"
+            ndk { abiFilters += listOf("arm64-v8a") }
+            buildConfigField("boolean", "TG_TDLIB_ENABLED", "true")
+        }
+        create("v7a") {
+            dimension = "arch"
+            ndk { abiFilters += listOf("armeabi-v7a") }
+            // Ensure Telegram feature is disabled on v7a
+            buildConfigField("boolean", "TG_TDLIB_ENABLED", "false")
+        }
     }
 
     compileOptions {
@@ -91,10 +110,11 @@ android {
     composeOptions { kotlinCompilerExtensionVersion = "1.5.14" }
 
     // Generate split APKs per ABI (32-bit and 64-bit)
     splits {
         abi {
-            isEnable = true
+            // Disabled: flavors control ABI now
+            isEnable = false
             reset()
             include("armeabi-v7a", "arm64-v8a")
             // Only per-ABI APKs (no universal)
             isUniversalApk = false
         }
@@ -128,9 +148,24 @@ android {
     // Keep reference APK dump in repo but exclude it from compilation so it doesn't interfere
     sourceSets {
         getByName("main") {
             java.srcDirs("src/main/java")
         }
+        // v7a flavor compiles against TdApi sources but uses stub Client/Log (no JNI load)
+        getByName("v7a") {
+            java.srcDir("src/v7a/java")
+            java.srcDir("$rootDir/libtd/src/main/java")
+            java.exclude(
+                "org/drinkless/tdlib/Client.java",
+                "org/drinkless/tdlib/Log.java"
+            )
+        }
     }
 
     testOptions {
         unitTests.isIncludeAndroidResources = true
     }
+
+    lint {
+        // Do not abort release builds on lint errors; keep warnings for CI
+        abortOnError = false
+    }
 }
 
 // Exclude reference sources from Kotlin/Java compilation tasks to avoid receiver ambiguities in sourceSets DSL
@@ -153,6 +188,9 @@ tasks.withType<JavaCompile>().configureEach {
 }
 
 dependencies {
+    // TDLib only for arm64 APK; v7a uses stubs and TdApi sources
+    arm64Implementation(project(":libtd"))
+
     val compose = "1.7.6" // aktuellstes Compose (Feb 2025)
 
     // Core + Compose
     implementation("androidx.core:core-ktx:1.15.0")
     implementation("androidx.activity:activity-compose:1.10.0")

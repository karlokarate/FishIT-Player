diff --git a/app/src/main/java/com/chris/m3usuite/data/repo/EpgRepository.kt b/app/src/main/java/com/chris/m3usuite/data/repo/EpgRepository.kt
index 51703a2..6564a4d 100644
--- a/app/src/main/java/com/chris/m3usuite/data/repo/EpgRepository.kt
+++ b/app/src/main/java/com/chris/m3usuite/data/repo/EpgRepository.kt
@@ -29,6 +29,7 @@ import kotlinx.serialization.json.jsonObject
 import kotlinx.serialization.json.jsonPrimitive
 import kotlinx.serialization.json.contentOrNull
 
+import com.chris.m3usuite.core.perf.DeviceTuning
 /**
  * Lightweight EPG helper with short TTL cache per streamId.
  * Focus: Now/Next (get_short_epg) performance and reliability.
@@ -114,6 +115,21 @@ class EpgRepository(
             row?.epgChannelId
         }
 
+        // v7a/Fire TV: When actively playing, avoid network EPG calls. Prefer minimal fallback.
+        if (DeviceTuning.isV7aAbi() && DeviceTuning.isPlaybackActive(context)) {
+            if (!chanId.isNullOrBlank()) {
+                val fb = fallbackXmlTvFor(chanId)
+                if (fb.isNotEmpty()) {
+                    lock.withLock { cache[streamId] = Cache(SystemClock.elapsedRealtime(), fb); trimIfNeeded() }
+                    return@withContext fb.take(limit)
+                }
+            }
+            // Mark empty to prevent repeated work within a short window
+            lock.withLock { emptyCache[streamId] = SystemClock.elapsedRealtime(); trimIfNeeded() }
+            return@withContext emptyList()
+        }
+
         // Global gate: if disabled, avoid any network/API and try stale OBX only
         if (!settings.m3uWorkersEnabled.first()) {
             if (!chanId.isNullOrBlank()) {

diff --git a/app/src/main/java/com/chris/m3usuite/ui/forms/TvTextFieldRow.kt b/app/src/main/java/com/chris/m3usuite/ui/forms/TvTextFieldRow.kt
new file mode 100644
index 0000000..88102b6
--- /dev/null
+++ b/app/src/main/java/com/chris/m3usuite/ui/forms/TvTextFieldRow.kt
@@ -0,0 +1,80 @@
+package com.chris.m3usuite.ui.forms
+
+import androidx.compose.foundation.layout.Arrangement
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.padding
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.OutlinedTextField
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.remember
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.text.input.PasswordVisualTransformation
+import androidx.compose.ui.unit.dp
+import com.chris.m3usuite.ui.skin.tvClickable
+import com.chris.m3usuite.ui.skin.focusScaleOnTv
+
+enum class TvKeyboard { Default, Number, Password, Uri }
+
+@Composable
+fun TvTextFieldRow(
+    label: String,
+    value: String,
+    onValueChange: (String) -> Unit,
+    placeholder: String? = null,
+    helperText: String? = null,
+    errorText: String? = null,
+    keyboard: TvKeyboard = TvKeyboard.Default,
+    modifier: Modifier = Modifier
+) {
+    val isPassword = remember(keyboard) { keyboard == TvKeyboard.Password }
+    Row(
+        modifier = modifier
+            .fillMaxWidth()
+            .padding(horizontal = 8.dp)
+            .tvClickable(onClick = { /* focus handled by OutlinedTextField */ }),
+        horizontalArrangement = Arrangement.spacedBy(12.dp, Alignment.Start),
+        verticalAlignment = Alignment.CenterVertically
+    ) {
+        Text(
+            label,
+            style = MaterialTheme.typography.bodyLarge,
+            modifier = Modifier.weight(1f)
+        )
+        OutlinedTextField(
+            value = value,
+            onValueChange = onValueChange,
+            placeholder = { if (!placeholder.isNullOrBlank()) Text(placeholder) },
+            visualTransformation = if (isPassword) PasswordVisualTransformation() else androidx.compose.ui.text.input.VisualTransformation.None,
+            modifier = Modifier
+                .weight(2f)
+                .focusScaleOnTv()
+        )
+    }
+    ValidationHint(helperText = helperText, errorText = errorText)
+}
